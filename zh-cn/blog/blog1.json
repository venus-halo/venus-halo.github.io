{
  "filename": "blog1.md",
  "__html": "<h2>一.什么是网关</h2>\n<h3>1.1 什么是网关</h3>\n<p>API Gateway（APIGW / API 网关），顾名思义，是出现在系统边界上的一个面向API的、串行集中式的强管控服务，这里的边界是企业IT系统的边界，可以理解为<code>企业级应用防火墙</code>，主要起到<code>隔离外部访问与内部系统的作用</code>。在微服务概念的流行之前，API网关就已经诞生了，例如银行、证券等领域常见的前置机系统，它也是解决访问认证、报文转换、访问统计等问题的。</p>\n<!-- more -->\n<p>API网关的流行，源于近几年来，移动应用与企业间互联需求的兴起。移动应用、企业互联，使得后台服务支持的对象，从以前单一的Web应用，扩展到多种使用场景，且每种使用场景对后台服务的要求都不尽相同。这不仅增加了后台服务的响应量，还增加了后台服务的复杂性。<code>随着微服务架构概念的提出，API网关成为了微服务架构的一个标配组件</code>。</p>\n<h3>1.2 网关应该具有的功能</h3>\n<img src=\"/images/sc-study/gwf.png\" width=\"650px\" height=\"450px\">\n<blockquote>\n<p>如上图所示：网关该具备的最基本的四大功能:统一接入，流量管控，协议适配转发，安全防护。</p>\n</blockquote>\n<h2>二.目前网关解决方案</h2>\n<h3>2.1 Nginx+ Lua</h3>\n<p>Nginx是由IgorSysoev为俄罗斯访问量第二的Rambler.ru站点开发的，一个高性能的HTTP和反向代理服务器。Ngnix一方面可以做反向代理，另外一方面做可以做静态资源服务器。</p>\n<blockquote>\n<p>但是准确的来说，在我看来，这种方案不是真正意义上的网关，而且即使自研网关的目标也是干掉Ngnix。</p>\n</blockquote>\n",
  "key1": "hello",
  "key2": "world"
}