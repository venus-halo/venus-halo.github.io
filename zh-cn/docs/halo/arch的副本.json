{
  "filename": "arch的副本.md",
  "__html": "<h2>Halo框架的设计</h2>\n<h3>Halo 模块</h3>\n<table>\n<thead>\n<tr>\n<th>模块名</th>\n<th>描述</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>halo-base</td>\n<td>base层注解</td>\n<td></td>\n</tr>\n<tr>\n<td>halo-collection</td>\n<td>采集能力图</td>\n<td></td>\n</tr>\n<tr>\n<td>halo-common</td>\n<td>框架公共部分</td>\n<td></td>\n</tr>\n<tr>\n<td>halo-core</td>\n<td>框架核心</td>\n<td></td>\n</tr>\n<tr>\n<td>halo-test</td>\n<td>框架测试模块</td>\n<td>todo 待重构</td>\n</tr>\n<tr>\n<td>halo-utils</td>\n<td>框架工具类用于各种DTO对象之间快速复制</td>\n<td></td>\n</tr>\n<tr>\n<td>halo-feign</td>\n<td>feign与Halo整合</td>\n<td>feign与Halo整合</td>\n</tr>\n</tbody>\n</table>\n<h3>Convertor设计</h3>\n<p>在Halo中有三类主要的对象：</p>\n<ul>\n<li>ClientObject: 也就是二方库中的数据对象，主要承担DTO的职责。</li>\n<li>Entity/ValueObject: 也就是既有属性又有行为的领域实体。</li>\n<li>DataObeject：是用来获取数据用的，主要是DAO使用。</li>\n</ul>\n<p><img src=\"https://raw.githubusercontent.com/SoftwareKing/halo/master/halo-docs/image/convertor.png\" alt=\"\"></p>\n<p>Convertor在上面三个对象之间的转换起到了至关重要的作用，然而Convertor里面的逻辑应该是简单的，大部分都是setter/getter, 如果属性重复度很高的话，也可以使用BeanUtils.copyProperties让代码变得更简洁。</p>\n<p>但事实情况是，现在系统中很多的Convertor逻辑并没有在Convertor里面。</p>\n"
}